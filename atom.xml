<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://empireghost.github.io/"/>
  <updated>2019-08-21T10:02:33.671Z</updated>
  <id>http://empireghost.github.io/</id>
  
  <author>
    <name>empireghost</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>file_extension</title>
    <link href="http://empireghost.github.io/2019/08/21/file-extension/"/>
    <id>http://empireghost.github.io/2019/08/21/file-extension/</id>
    <published>2019-08-21T07:36:34.000Z</published>
    <updated>2019-08-21T10:02:33.671Z</updated>
    
    <content type="html"><![CDATA[<h2 id="获取文件后缀"><a href="#获取文件后缀" class="headerlink" title="获取文件后缀"></a>获取文件后缀</h2><h3 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;28.0-jre&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="1-使用guava"><a href="#1-使用guava" class="headerlink" title="1    使用guava"></a>1    使用guava</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String fileExtension = Files.getFileExtension(filePath);</span><br></pre></td></tr></table></figure><p>​    特殊情况</p><p>​                1   没有后缀 – 方法返回空字符</p><p>​                2   只有后缀比如  “.gitignore”   – 方法返回.之后的字符</p><h3 id="2-使用commons-io"><a href="#2-使用commons-io" class="headerlink" title="2  使用commons-io"></a>2  使用commons-io</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String extension = FilenameUtils.getExtension(filePath);</span><br></pre></td></tr></table></figure><p>​    特殊情况</p><p>​                1   没有后缀 – 方法返回空字符</p><p>​                2   只有后缀比如  “.gitignore”   – 方法返回.之后的字符</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;获取文件后缀&quot;&gt;&lt;a href=&quot;#获取文件后缀&quot; class=&quot;headerlink&quot; title=&quot;获取文件后缀&quot;&gt;&lt;/a&gt;获取文件后缀&lt;/h2&gt;&lt;h3 id=&quot;maven依赖&quot;&gt;&lt;a href=&quot;#maven依赖&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="guava commons-lang3" scheme="http://empireghost.github.io/tags/guava-commons-lang3/"/>
    
  </entry>
  
  <entry>
    <title>file_size</title>
    <link href="http://empireghost.github.io/2019/08/21/file-size/"/>
    <id>http://empireghost.github.io/2019/08/21/file-size/</id>
    <published>2019-08-21T07:36:18.000Z</published>
    <updated>2019-08-21T10:14:52.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用java获取文件大小"><a href="#使用java获取文件大小" class="headerlink" title="使用java获取文件大小"></a>使用java获取文件大小</h2><h3 id="maven-依赖"><a href="#maven-依赖" class="headerlink" title="maven 依赖"></a>maven 依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="1-使用标准java-API"><a href="#1-使用标准java-API" class="headerlink" title="1   使用标准java API"></a>1   使用标准java API</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">private long getFileSize(File file) &#123;</span><br><span class="line">    long length = file.length();</span><br><span class="line">    return length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-使用Java-nio"><a href="#2-使用Java-nio" class="headerlink" title="2  使用Java  nio"></a>2  使用Java  nio</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Path imageFilePath = Paths.get(&quot;src/test/resources/image.jpg&quot;);</span><br><span class="line">FileChannel imageFileChannel = FileChannel.open(imageFilePath);</span><br><span class="line">long imageFileSize = imageFileChannel.size();</span><br></pre></td></tr></table></figure><h3 id="3-使用-Apache-Commons-IO"><a href="#3-使用-Apache-Commons-IO" class="headerlink" title="3   使用    Apache Commons IO"></a>3   使用    Apache Commons IO</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">File imageFile = new File(&quot;src/test/resources/image.jpg&quot;);</span><br><span class="line">long size = FileUtils.sizeOf(imageFile);</span><br><span class="line">FileUtils.byteCountToDisplaySize(size)</span><br></pre></td></tr></table></figure><p>​        <strong>对于安全限制的文件，  <em>FileUtils.sizeOf()</em> 方法返回零.</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用java获取文件大小&quot;&gt;&lt;a href=&quot;#使用java获取文件大小&quot; class=&quot;headerlink&quot; title=&quot;使用java获取文件大小&quot;&gt;&lt;/a&gt;使用java获取文件大小&lt;/h2&gt;&lt;h3 id=&quot;maven-依赖&quot;&gt;&lt;a href=&quot;#maven
      
    
    </summary>
    
    
      <category term="commons-io file size" scheme="http://empireghost.github.io/tags/commons-io-file-size/"/>
    
  </entry>
  
  <entry>
    <title>file_lines_count</title>
    <link href="http://empireghost.github.io/2019/08/21/file-lines-count/"/>
    <id>http://empireghost.github.io/2019/08/21/file-lines-count/</id>
    <published>2019-08-21T07:35:56.000Z</published>
    <updated>2019-08-21T10:25:54.427Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java获取文件行数"><a href="#java获取文件行数" class="headerlink" title="java获取文件行数"></a>java获取文件行数</h2><h3 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;28.0-jre&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="1-使用-NIO-的Files类"><a href="#1-使用-NIO-的Files类" class="headerlink" title="1 使用 NIO 的Files类"></a>1 使用 NIO 的Files类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">try (Stream&lt;String&gt; fileStream = Files.lines(Paths.get(INPUT_FILE_NAME))) &#123;</span><br><span class="line">        int noOfLines = (int) fileStream.count();</span><br><span class="line">&#125;</span><br><span class="line">或者</span><br><span class="line">List&lt;String&gt; fileStream = Files.readAllLines(Paths.get(INPUT_FILE_NAME));</span><br><span class="line">int noOfLines = fileStream.size();</span><br></pre></td></tr></table></figure><h3 id="2-NIO-FileChannel"><a href="#2-NIO-FileChannel" class="headerlink" title="2    NIO FileChannel"></a>2    NIO <em>FileChannel</em></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int noOfLines = 1;</span><br><span class="line">try (FileChannel channel = FileChannel.open(Paths.get(INPUT_FILE_NAME), StandardOpenOption.READ)) &#123;</span><br><span class="line">ByteBuffer byteBuffer = channel.map(MapMode.READ_ONLY, 0, channel.size());</span><br><span class="line">while (byteBuffer.hasRemaining()) &#123;</span><br><span class="line">byte currentByte = byteBuffer.get();</span><br><span class="line">if (currentByte == &apos;\n&apos;) &#123;</span><br><span class="line">noOfLines++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-Google-Guava-Files"><a href="#3-Google-Guava-Files" class="headerlink" title="3    Google Guava Files"></a>3    Google Guava <em>Files</em></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; lineItems = Files.readLines(Paths.get(INPUT_FILE_NAME)</span><br><span class="line">             .toFile(), Charset.defaultCharset());</span><br><span class="line">int noOfLines = lineItems.size();</span><br></pre></td></tr></table></figure><h3 id="4-Apache-Commons-IO-FileUtils"><a href="#4-Apache-Commons-IO-FileUtils" class="headerlink" title="4  Apache Commons IO FileUtils"></a>4  Apache Commons IO <em>FileUtils</em></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int noOfLines = 0;</span><br><span class="line">LineIterator lineIterator = FileUtils.lineIterator(new File(INPUT_FILE_NAME));</span><br><span class="line">while (lineIterator.hasNext()) &#123;</span><br><span class="line">    lineIterator.nextLine();</span><br><span class="line">    noOfLines++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-BufferedReader"><a href="#5-BufferedReader" class="headerlink" title="5  BufferedReader"></a>5  <em>BufferedReader</em></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int noOfLines = 0;</span><br><span class="line">try (BufferedReader reader = new BufferedReader(new FileReader(INPUT_FILE_NAME))) &#123;</span><br><span class="line">    while (reader.readLine() != null) &#123;</span><br><span class="line">        noOfLines++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-LineNumberReader"><a href="#6-LineNumberReader" class="headerlink" title="6 LineNumberReader"></a>6 <em>LineNumberReader</em></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">try (LineNumberReader reader = new LineNumberReader(new FileReader(INPUT_FILE_NAME))) &#123;</span><br><span class="line">        reader.skip(Integer.MAX_VALUE);</span><br><span class="line">        int noOfLines = reader.getLineNumber() + 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-Scanner"><a href="#7-Scanner" class="headerlink" title="7  Scanner"></a>7  <em>Scanner</em></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">try (Scanner scanner = new Scanner(new FileReader(INPUT_FILE_NAME))) &#123;</span><br><span class="line">     int noOfLines = 0;</span><br><span class="line">     while (scanner.hasNextLine()) &#123;</span><br><span class="line">         scanner.nextLine();</span><br><span class="line">         noOfLines++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java获取文件行数&quot;&gt;&lt;a href=&quot;#java获取文件行数&quot; class=&quot;headerlink&quot; title=&quot;java获取文件行数&quot;&gt;&lt;/a&gt;java获取文件行数&lt;/h2&gt;&lt;h3 id=&quot;maven依赖&quot;&gt;&lt;a href=&quot;#maven依赖&quot; class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>check_empty_blank</title>
    <link href="http://empireghost.github.io/2019/08/21/check-empty-blank/"/>
    <id>http://empireghost.github.io/2019/08/21/check-empty-blank/</id>
    <published>2019-08-21T07:32:47.000Z</published>
    <updated>2019-08-21T08:33:05.311Z</updated>
    
    <content type="html"><![CDATA[<h2 id="检查字符是否为空"><a href="#检查字符是否为空" class="headerlink" title="检查字符是否为空"></a>检查字符是否为空</h2><h3 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;28.0-jre&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="一-empty-检查"><a href="#一-empty-检查" class="headerlink" title="一   empty 检查"></a><strong>一   empty 检查</strong></h3><p>1     jdk1.6 及以上      null-safe 检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">boolean isEmptyString(String string) &#123;</span><br><span class="line">    return string == null || string.isEmpty();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2   jdk1.5 及以下       null-safe 检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">boolean isEmptyString(String string) &#123;</span><br><span class="line">    return string == null || string.length() == 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二-blank-检查"><a href="#二-blank-检查" class="headerlink" title="二   blank 检查"></a>二   blank 检查</h3><p>1  使用 common-lang3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">StringUtils.isBlank(string)</span><br></pre></td></tr></table></figure><p>2 使用 guava</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Strings.isNullOrEmpty(string)</span><br></pre></td></tr></table></figure><h3 id="三-总结"><a href="#三-总结" class="headerlink" title="三  总结"></a>三  总结</h3><p>  很多方法都可以，最推荐  common-langs 方法</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;检查字符是否为空&quot;&gt;&lt;a href=&quot;#检查字符是否为空&quot; class=&quot;headerlink&quot; title=&quot;检查字符是否为空&quot;&gt;&lt;/a&gt;检查字符是否为空&lt;/h2&gt;&lt;h3 id=&quot;maven依赖&quot;&gt;&lt;a href=&quot;#maven依赖&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="empty blank guava commons-lang3" scheme="http://empireghost.github.io/tags/empty-blank-guava-commons-lang3/"/>
    
  </entry>
  
  <entry>
    <title>fastjson</title>
    <link href="http://empireghost.github.io/2019/06/10/javafilesize/"/>
    <id>http://empireghost.github.io/2019/06/10/javafilesize/</id>
    <published>2019-06-10T06:33:27.000Z</published>
    <updated>2019-08-07T03:32:36.612Z</updated>
    
    <content type="html"><![CDATA[<h4 id="获取文件大小"><a href="#获取文件大小" class="headerlink" title="获取文件大小"></a>获取文件大小</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;28.0-jre&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;获取文件大小&quot;&gt;&lt;a href=&quot;#获取文件大小&quot; class=&quot;headerlink&quot; title=&quot;获取文件大小&quot;&gt;&lt;/a&gt;获取文件大小&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="java file" scheme="http://empireghost.github.io/tags/java-file/"/>
    
  </entry>
  
  <entry>
    <title>Curator&#39;</title>
    <link href="http://empireghost.github.io/2019/03/19/Curator/"/>
    <id>http://empireghost.github.io/2019/03/19/Curator/</id>
    <published>2019-03-19T06:33:27.000Z</published>
    <updated>2019-03-19T06:37:49.653Z</updated>
    
    <content type="html"><![CDATA[<h5 id="使用Apache-Curator-添加maven依赖注意"><a href="#使用Apache-Curator-添加maven依赖注意" class="headerlink" title="使用Apache Curator 添加maven依赖注意"></a>使用Apache Curator 添加maven依赖注意</h5><h5 id="一定要-需要排除zookeeper的客户端依赖包-并引入你需要的zookeeper依赖包版本，比如引入3-4-13"><a href="#一定要-需要排除zookeeper的客户端依赖包-并引入你需要的zookeeper依赖包版本，比如引入3-4-13" class="headerlink" title="一定要      需要排除zookeeper的客户端依赖包     并引入你需要的zookeeper依赖包版本，比如引入3.4.13"></a>一定要      需要排除zookeeper的客户端依赖包     并引入你需要的zookeeper依赖包版本，比如引入3.4.13</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;使用Apache-Curator-添加maven依赖注意&quot;&gt;&lt;a href=&quot;#使用Apache-Curator-添加maven依赖注意&quot; class=&quot;headerlink&quot; title=&quot;使用Apache Curator 添加maven依赖注意&quot;&gt;&lt;/a&gt;使用
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>&#39;oracle&#39;</title>
    <link href="http://empireghost.github.io/2019/03/19/oracle/"/>
    <id>http://empireghost.github.io/2019/03/19/oracle/</id>
    <published>2019-03-19T06:11:37.000Z</published>
    <updated>2019-03-19T06:25:22.675Z</updated>
    
    <content type="html"><![CDATA[<h3 id="oracle-判断某个字段是否是数值"><a href="#oracle-判断某个字段是否是数值" class="headerlink" title="oracle 判断某个字段是否是数值"></a>oracle 判断某个字段是否是数值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT distinct con.ACCOUNT_BANK_NAME</span><br><span class="line">  FROM USER_BANK CON</span><br><span class="line"> <span class="function">WHERE <span class="title">TRIM</span><span class="params">(TRANSLATE(CON.ACCOUNT_BANK_NAME, <span class="string">'0123456789'</span>, <span class="string">' '</span>)</span>) IS NULL</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> CON.ACCOUNT_BANK_NAME</span><br><span class="line">  <span class="keyword">FROM</span> USER_BANK CON</span><br><span class="line"> <span class="keyword">WHERE</span> CON.CDEFAULT_FLAG = <span class="string">'0'</span></span><br><span class="line">   <span class="keyword">AND</span> <span class="keyword">TRIM</span>(<span class="keyword">TRANSLATE</span>(NVL(CON.ACCOUNT_BANK_NAME, <span class="string">'X'</span>), <span class="string">'0123456789'</span>, <span class="string">' '</span>)) <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;oracle-判断某个字段是否是数值&quot;&gt;&lt;a href=&quot;#oracle-判断某个字段是否是数值&quot; class=&quot;headerlink&quot; title=&quot;oracle 判断某个字段是否是数值&quot;&gt;&lt;/a&gt;oracle 判断某个字段是否是数值&lt;/h3&gt;&lt;figure c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FastJSON</title>
    <link href="http://empireghost.github.io/2018/11/29/FastJSON/"/>
    <id>http://empireghost.github.io/2018/11/29/FastJSON/</id>
    <published>2018-11-29T08:38:50.000Z</published>
    <updated>2018-11-29T08:40:30.708Z</updated>
    
    <content type="html"><![CDATA[<ol><li>什么是fastjson?<br>fastjson是阿里巴巴的开源JSON解析库，它可以解析JSON格式的字符串，支持将Java Bean序列化为JSON字符串，也可以从JSON字符串反序列化到JavaBean。</li></ol><p>2.fastjson的优点<br>2.1 速度快<br>fastjson相对其他JSON库的特点是快，从2011年fastjson发布1.1.x版本之后，其性能从未被其他Java实现的JSON库超越。</p><p>2.2 使用广泛<br>fastjson在阿里巴巴大规模使用，在数万台服务器上部署，fastjson在业界被广泛接受。在2012年被开源中国评选为最受欢迎的国产开源软件之一。</p><p>2.3 测试完备<br>fastjson有非常多的testcase，在1.2.11版本中，testcase超过3321个。每次发布都会进行回归测试，保证质量稳定。</p><p>2.4 使用简单<br>fastjson的API十分简洁。</p><p>String text = JSON.toJSONString(obj); //序列化<br>VO vo = JSON.parseObject(“{…}”, VO.class); //反序列化<br>2.5 功能完备<br>支持泛型，支持流处理超大文本，支持枚举，支持序列化和反序列化扩展。</p><ol><li>下载和使用<br>eclipse JavaEE平台下载及使用：<br>下载jar包。最新版jar包下载；</li></ol><p>导入jar包。将jar包复制到需要使用json的工程中；详细步骤请参考这里</p><p>文档真垃圾！找了一上午才找到解决方案！</p><p>你可以在maven中央仓库中直接下载：<br><a href="http://repo1.maven.org/maven2/com/alibaba/fastjson/" target="_blank" rel="noopener">http://repo1.maven.org/maven2/com/alibaba/fastjson/</a><br>或者配置maven依赖</p><p><dependency><br>    <groupid>com.alibaba</groupid><br>    <artifactid>fastjson</artifactid><br>    <version>x.x.x</version><br></dependency><br>其中x.x.x是版本号，根据需要使用特定版本，建议使用最新版本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;什么是fastjson?&lt;br&gt;fastjson是阿里巴巴的开源JSON解析库，它可以解析JSON格式的字符串，支持将Java Bean序列化为JSON字符串，也可以从JSON字符串反序列化到JavaBean。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2.fastjson的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Gson</title>
    <link href="http://empireghost.github.io/2018/11/29/Gson/"/>
    <id>http://empireghost.github.io/2018/11/29/Gson/</id>
    <published>2018-11-29T08:38:25.000Z</published>
    <updated>2019-01-09T11:07:41.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gson简介"><a href="#Gson简介" class="headerlink" title="Gson简介"></a><strong>Gson简介</strong></h1><p>Google Gson是一个简单的基于Java的库，用于将Java对象序列化为JSON，反之亦然。 它是由Google开发的一个开源库。</p><p>以下几点说明为什么应该使用这个库 -</p><h4 id="标准化-Gson是一个由Google管理的标准化库。"><a href="#标准化-Gson是一个由Google管理的标准化库。" class="headerlink" title="标准化 - Gson是一个由Google管理的标准化库。"></a>标准化 - Gson是一个由Google管理的标准化库。</h4><h4 id="高效-这是对Java标准库的可靠，快速和高效的扩展。"><a href="#高效-这是对Java标准库的可靠，快速和高效的扩展。" class="headerlink" title="高效 - 这是对Java标准库的可靠，快速和高效的扩展。"></a>高效 - 这是对Java标准库的可靠，快速和高效的扩展。</h4><p>优化 - Gson库经过高度优化。</p><p>支持泛型 - 它为泛型提供了广泛的支持。</p><p>支持复杂的内部类 - 它支持具有深度继承层次结构的复杂对象。</p><p>Gson的特点<br>这里列出了Gson的一些最显着的特点 -</p><p>易于使用 - Gson API提供了一个高级外观来简化常用的用例。</p><p>无需创建映射 - Gson API为大部分要序列化的对象提供了默认映射。</p><p>性能优 - Gson速度相当快，内存占用量低。 它适用于大型对象图或系统。</p><p>干净JSON - Gson创建一个干净而紧凑的JSON结果，它易于阅读。</p><p>无依赖性—Gson库不需要JDK以外的任何其他库。</p><p>开源 - Gson库是开源的; 它是免费提供的。</p><p>处理JSON的三种方法<br>Gson提供了三种处理JSON的替代方法 -</p><ol><li>流媒体API</li></ol><p>它读取和写入JSON内容作为离散事件。 JsonReader和JsonWriter将数据读取/写入令牌，称为JsonToken。</p><p>这是处理JSON的三种方法中最强大的方法。 它具有最低的开销，并且在读/写操作中速度非常快。 它类似于用于XML的Stax解析器。</p><ol><li><p>树模型<br>它准备JSON文档的内存树表示。 它构建了一个JsonObject节点树。 这是一种灵活的方法，类似于XML的DOM解析器。</p></li><li><p>数据绑定<br>它使用属性访问器将JSON转换为POJO(普通旧Java对象)并从中转换。 Gson使用数据类型适配器读取/写入JSON。 它类似于XML的JAXB解析器。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Gson简介&quot;&gt;&lt;a href=&quot;#Gson简介&quot; class=&quot;headerlink&quot; title=&quot;Gson简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;Gson简介&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Google Gson是一个简单的基于Java的库，用于将Java对象序列
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iText</title>
    <link href="http://empireghost.github.io/2018/11/29/iText/"/>
    <id>http://empireghost.github.io/2018/11/29/iText/</id>
    <published>2018-11-29T08:31:01.000Z</published>
    <updated>2018-11-29T08:31:01.616Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Thymeleaf</title>
    <link href="http://empireghost.github.io/2018/11/29/Thymeleaf/"/>
    <id>http://empireghost.github.io/2018/11/29/Thymeleaf/</id>
    <published>2018-11-29T08:30:47.000Z</published>
    <updated>2018-11-29T08:30:47.673Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FreeMarker</title>
    <link href="http://empireghost.github.io/2018/11/29/FreeMarker/"/>
    <id>http://empireghost.github.io/2018/11/29/FreeMarker/</id>
    <published>2018-11-29T08:30:14.000Z</published>
    <updated>2019-01-04T06:28:19.003Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: 是 or 否?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure><p>```</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Retrofit</title>
    <link href="http://empireghost.github.io/2018/11/29/Retrofit/"/>
    <id>http://empireghost.github.io/2018/11/29/Retrofit/</id>
    <published>2018-11-29T08:29:50.000Z</published>
    <updated>2018-11-29T08:29:50.219Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>OKHttp</title>
    <link href="http://empireghost.github.io/2018/11/29/OKHttp/"/>
    <id>http://empireghost.github.io/2018/11/29/OKHttp/</id>
    <published>2018-11-29T08:29:39.000Z</published>
    <updated>2018-11-29T08:29:39.192Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mybatis Generate</title>
    <link href="http://empireghost.github.io/2018/05/24/Mybatis-Generate/"/>
    <id>http://empireghost.github.io/2018/05/24/Mybatis-Generate/</id>
    <published>2018-05-24T06:06:45.000Z</published>
    <updated>2018-05-24T06:11:26.304Z</updated>
    
    <content type="html"><![CDATA[<h5 id="mybatis-generator-如何生成带有反引号的mapper-xml"><a href="#mybatis-generator-如何生成带有反引号的mapper-xml" class="headerlink" title="mybatis-generator 如何生成带有反引号的mapper.xml"></a>mybatis-generator 如何生成带有反引号的mapper.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;property name=&quot;beginningDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line">&lt;property name=&quot;endingDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line"></span><br><span class="line">delimitAllColumns=&quot;true&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;mybatis-generator-如何生成带有反引号的mapper-xml&quot;&gt;&lt;a href=&quot;#mybatis-generator-如何生成带有反引号的mapper-xml&quot; class=&quot;headerlink&quot; title=&quot;mybatis-generato
      
    
    </summary>
    
      <category term="Mybatis Generate" scheme="http://empireghost.github.io/categories/Mybatis-Generate/"/>
    
    
      <category term="Mybatis Generate" scheme="http://empireghost.github.io/tags/Mybatis-Generate/"/>
    
  </entry>
  
  <entry>
    <title>最近在学习的开源软件</title>
    <link href="http://empireghost.github.io/2018/01/03/%E6%9C%80%E8%BF%91%E5%AD%A6%E4%B9%A0%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <id>http://empireghost.github.io/2018/01/03/最近学习的软件/</id>
    <published>2018-01-03T08:15:07.000Z</published>
    <updated>2018-01-03T08:31:53.851Z</updated>
    
    <content type="html"><![CDATA[<h4 id="OKHttp"><a href="#OKHttp" class="headerlink" title="OKHttp"></a><a href="http://square.github.io/okhttp/" target="_blank" rel="noopener">OKHttp</a></h4><h4 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a><a href="http://square.github.io/retrofit/" target="_blank" rel="noopener">Retrofit</a></h4><h4 id="Guice"><a href="#Guice" class="headerlink" title="Guice"></a><a href="https://github.com/google/guice" target="_blank" rel="noopener">Guice</a></h4><h4 id="Guava"><a href="#Guava" class="headerlink" title="Guava"></a><a href="https://github.com/google/guava" target="_blank" rel="noopener">Guava</a></h4><h4 id="Sharding-jdbc"><a href="#Sharding-jdbc" class="headerlink" title="Sharding-jdbc"></a><a href="http://shardingjdbc.io" target="_blank" rel="noopener">Sharding-jdbc</a></h4><h4 id="Elastic-job"><a href="#Elastic-job" class="headerlink" title="Elastic-job"></a><a href="http://elasticjob.io" target="_blank" rel="noopener">Elastic-job</a></h4><h4 id="mybatis-plus"><a href="#mybatis-plus" class="headerlink" title="mybatis-plus"></a><a href="https://github.com/baomidou/mybatis-plus" target="_blank" rel="noopener">mybatis-plus</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;OKHttp&quot;&gt;&lt;a href=&quot;#OKHttp&quot; class=&quot;headerlink&quot; title=&quot;OKHttp&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://square.github.io/okhttp/&quot; target=&quot;_blank&quot; rel=&quot;noope
      
    
    </summary>
    
      <category term="OKHttp Retrofit Guice Guava Sharding-jdbc Elastic-job" scheme="http://empireghost.github.io/categories/OKHttp-Retrofit-Guice-Guava-Sharding-jdbc-Elastic-job/"/>
    
    
      <category term="OKHttp Retrofit Guice Guava Sharding-jdbc Elastic-job" scheme="http://empireghost.github.io/tags/OKHttp-Retrofit-Guice-Guava-Sharding-jdbc-Elastic-job/"/>
    
  </entry>
  
  <entry>
    <title>mysqlexport</title>
    <link href="http://empireghost.github.io/2017/12/28/mysqlexport/"/>
    <id>http://empireghost.github.io/2017/12/28/mysqlexport/</id>
    <published>2017-12-28T07:24:08.000Z</published>
    <updated>2017-12-28T07:27:52.887Z</updated>
    
    <content type="html"><![CDATA[<h4 id="mysql-根据sql语句导出数据"><a href="#mysql-根据sql语句导出数据" class="headerlink" title="mysql 根据sql语句导出数据"></a>mysql 根据sql语句导出数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    a.*,</span><br><span class="line">    b.b,</span><br><span class="line">    b.c,</span><br><span class="line">    b.d</span><br><span class="line">FROM</span><br><span class="line">    a</span><br><span class="line">LEFT JOIN b ON a.f = b.a </span><br><span class="line">INTO OUTFILE &apos;d:\wwwww.txt&apos; </span><br><span class="line">CHARACTER SET gbk </span><br><span class="line">FIELDS TERMINATED BY &apos;    &apos; </span><br><span class="line">OPTIONALLY ENCLOSED BY &apos;&apos; </span><br><span class="line">LINES TERMINATED BY &apos;\n&apos;;</span><br></pre></td></tr></table></figure><h4 id="mysql-删除重复数据"><a href="#mysql-删除重复数据" class="headerlink" title="mysql 删除重复数据"></a>mysql 删除重复数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DELETE t</span><br><span class="line">FROM</span><br><span class="line">    b t</span><br><span class="line">LEFT JOIN (</span><br><span class="line">    SELECT</span><br><span class="line">        a,</span><br><span class="line">        min(id) AS min_id</span><br><span class="line">    FROM</span><br><span class="line">        b</span><br><span class="line">    GROUP BY</span><br><span class="line">        a</span><br><span class="line">) t1 ON t.id = t1.min_id</span><br><span class="line">WHERE</span><br><span class="line">    t1.min_id IS NULL;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;mysql-根据sql语句导出数据&quot;&gt;&lt;a href=&quot;#mysql-根据sql语句导出数据&quot; class=&quot;headerlink&quot; title=&quot;mysql 根据sql语句导出数据&quot;&gt;&lt;/a&gt;mysql 根据sql语句导出数据&lt;/h4&gt;&lt;figure class
      
    
    </summary>
    
      <category term="mysql export" scheme="http://empireghost.github.io/categories/mysql-export/"/>
    
    
      <category term="mysql 导出 export" scheme="http://empireghost.github.io/tags/mysql-%E5%AF%BC%E5%87%BA-export/"/>
    
  </entry>
  
  <entry>
    <title>RPC</title>
    <link href="http://empireghost.github.io/2017/12/22/RPC/"/>
    <id>http://empireghost.github.io/2017/12/22/RPC/</id>
    <published>2017-12-22T03:02:55.000Z</published>
    <updated>2018-01-03T08:29:52.066Z</updated>
    
    <content type="html"><![CDATA[<h4 id="thrift"><a href="#thrift" class="headerlink" title="thrift"></a><a href="http://thrift.apache.org/" target="_blank" rel="noopener">thrift</a></h4><p>thrift 注册多个服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">TBinaryProtocol.Factory proFactory = new TBinaryProtocol.Factory();</span><br><span class="line"></span><br><span class="line">TProcessor myServiceProcessor = new MyService.Processor&lt;MyService.Iface&gt;(</span><br><span class="line">        new MyServiceImpl());</span><br><span class="line"></span><br><span class="line">TProcessor personServiceProcessor = new PersonService.Processor&lt;PersonService.Iface&gt;(</span><br><span class="line">        new PersonServiceImpl());</span><br><span class="line"></span><br><span class="line">TMultiplexedProcessor multiProcessor = new TMultiplexedProcessor();</span><br><span class="line">multiProcessor.registerProcessor(&quot;myService&quot;, myServiceProcessor);</span><br><span class="line">multiProcessor.registerProcessor(&quot;personService&quot;, personServiceProcessor);</span><br></pre></td></tr></table></figure><hr><h4 id="grpc"><a href="#grpc" class="headerlink" title="grpc"></a><a href="http://grpc.io/" target="_blank" rel="noopener">grpc</a></h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;thrift&quot;&gt;&lt;a href=&quot;#thrift&quot; class=&quot;headerlink&quot; title=&quot;thrift&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://thrift.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;t
      
    
    </summary>
    
      <category term="RPC thrift grpc" scheme="http://empireghost.github.io/categories/RPC-thrift-grpc/"/>
    
    
      <category term="RPC thrift grpc" scheme="http://empireghost.github.io/tags/RPC-thrift-grpc/"/>
    
  </entry>
  
  <entry>
    <title>Esper</title>
    <link href="http://empireghost.github.io/2017/12/22/Esper/"/>
    <id>http://empireghost.github.io/2017/12/22/Esper/</id>
    <published>2017-12-22T02:56:55.000Z</published>
    <updated>2018-01-03T08:32:18.415Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Esper"><a href="#Esper" class="headerlink" title="Esper"></a><a href="http://www.espertech.com/esper/" target="_blank" rel="noopener">Esper</a></h5><pre><code>CEP即Complex Event Process，中文意思就是“复杂事件处理”。听起来好像很复杂，实际上就是基于事件流进行数据处理，把要分析的数据抽象成事件，然后将数据发送到CEP引擎，引擎就会根据事件的输入和最初注册的处理模型，得到事件处理结果。</code></pre><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Esper&quot;&gt;&lt;a href=&quot;#Esper&quot; class=&quot;headerlink&quot; title=&quot;Esper&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.espertech.com/esper/&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
      <category term="Esper" scheme="http://empireghost.github.io/categories/Esper/"/>
    
    
      <category term="复杂事件处理 EsperComplexEventProcess" scheme="http://empireghost.github.io/tags/%E5%A4%8D%E6%9D%82%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86-EsperComplexEventProcess/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch查询</title>
    <link href="http://empireghost.github.io/2017/12/01/ElasticSearch%E6%9F%A5%E8%AF%A2/"/>
    <id>http://empireghost.github.io/2017/12/01/ElasticSearch查询/</id>
    <published>2017-12-01T08:34:05.000Z</published>
    <updated>2017-12-01T08:49:31.158Z</updated>
    
    <content type="html"><![CDATA[<h5 id="matchAllQuery-全匹配"><a href="#matchAllQuery-全匹配" class="headerlink" title="matchAllQuery  全匹配"></a>matchAllQuery  全匹配</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilder qb = matchAllQuery();</span><br></pre></td></tr></table></figure><h5 id="matchQuery-单个匹配"><a href="#matchQuery-单个匹配" class="headerlink" title="matchQuery  单个匹配"></a>matchQuery  单个匹配</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilder qb = matchQuery(&quot;name&quot;,&quot;kimchy elasticsearch&quot;);</span><br></pre></td></tr></table></figure><h5 id="multiMatchQuery-多字段单值匹配"><a href="#multiMatchQuery-多字段单值匹配" class="headerlink" title="multiMatchQuery     多字段单值匹配"></a>multiMatchQuery     多字段单值匹配</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QueryBuilder qb = multiMatchQuery(&quot;kimchy elasticsearch&quot;, //key</span><br><span class="line">            &quot;user&quot;,&quot;message&quot;   //two field </span><br><span class="line">        );</span><br></pre></td></tr></table></figure><h5 id="wildcardQuery-模糊匹配"><a href="#wildcardQuery-模糊匹配" class="headerlink" title="wildcardQuery  模糊匹配"></a>wildcardQuery  模糊匹配</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WildcardQueryBuilder qb = QueryBuilders.wildcardQuery(&quot;empname&quot;,&quot;*emp*&quot;);</span><br></pre></td></tr></table></figure><h5 id="boolType-AND"><a href="#boolType-AND" class="headerlink" title="boolType AND"></a>boolType AND</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BoolQueryBuilder subQuery = QueryBuilders.boolQuery();</span><br><span class="line"></span><br><span class="line">WildcardQueryBuilder qb1 = QueryBuilders.wildcardQuery(&quot;empname&quot;,&quot;*emp*&quot;);</span><br><span class="line"></span><br><span class="line">WildcardQueryBuilder qb2 = QueryBuilders.wildcardQuery(&quot;gender&quot;,&quot;*male*&quot;);</span><br><span class="line"></span><br><span class="line">subQuery.must(qb1);</span><br><span class="line">subQuery.must(qb2);</span><br></pre></td></tr></table></figure><h5 id="boolType-OR"><a href="#boolType-OR" class="headerlink" title="boolType OR"></a>boolType OR</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BoolQueryBuilder subQuery = QueryBuilders.boolQuery();</span><br><span class="line"></span><br><span class="line">WildcardQueryBuilder qb1 = QueryBuilders.wildcardQuery(&quot;empname&quot;,&quot;*emp*&quot;);</span><br><span class="line"></span><br><span class="line">WildcardQueryBuilder qb2 = QueryBuilders.wildcardQuery(&quot;gender&quot;,&quot;*male*&quot;);</span><br><span class="line"></span><br><span class="line">subQuery.should(qb1);</span><br><span class="line">subQuery.should(qb2);</span><br></pre></td></tr></table></figure><h5 id="分页-通过from和size参数进行分页。From定义查询结果开始位置，size定义返回的hits（一条hit对应一条记录）最大数量"><a href="#分页-通过from和size参数进行分页。From定义查询结果开始位置，size定义返回的hits（一条hit对应一条记录）最大数量" class="headerlink" title="分页  通过from和size参数进行分页。From定义查询结果开始位置，size定义返回的hits（一条hit对应一条记录）最大数量"></a>分页  通过from和size参数进行分页。From定义查询结果开始位置，size定义返回的hits（一条hit对应一条记录）最大数量</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SearchResponse response = client.prepareSearch(&quot;dept&quot;)</span><br><span class="line">            .setTypes(&quot;employee&quot;)</span><br><span class="line">            .setQuery(queryBuilder)</span><br><span class="line">            .setFrom(0)</span><br><span class="line">            .setSize(2)</span><br><span class="line">            .execute()</span><br><span class="line">            .actionGet();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;matchAllQuery-全匹配&quot;&gt;&lt;a href=&quot;#matchAllQuery-全匹配&quot; class=&quot;headerlink&quot; title=&quot;matchAllQuery  全匹配&quot;&gt;&lt;/a&gt;matchAllQuery  全匹配&lt;/h5&gt;&lt;figure cla
      
    
    </summary>
    
      <category term="ElasticSearch" scheme="http://empireghost.github.io/categories/ElasticSearch/"/>
    
    
      <category term="ElasticSearch" scheme="http://empireghost.github.io/tags/ElasticSearch/"/>
    
  </entry>
  
</feed>
